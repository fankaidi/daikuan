<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kensure.ktl.liuliang.dao.LLNoticeDao"><!--dsName="" saasAspect=""-->
	<!-- <cache readOnly="true"/> -->
    <sql id="allFields">
		id,
		title,
		content,
		create_date as createDate,
		update_date as updateDate,
		user_id as userId,
		status
    </sql>
    
	<sql id="insertFields">
		id,
		title,
		content,
		create_date,
		update_date,
		user_id,
		status
    </sql>
	
	<insert id="insert" parameterType="com.kensure.ktl.liuliang.model.LLNotice">
		insert into ll_notice (<include refid="insertFields"/>)
		values (
			#{id},
			#{title},
			#{content},
			#{createDate},
			#{updateDate},
			#{userId},
			#{status}
		)
	</insert>
	
	<insert id="insertInBatch" parameterType="com.kensure.ktl.liuliang.model.LLNotice">
		insert into ll_notice (<include refid="insertFields"/>) values 
		<foreach collection="list" item="item" index="index" separator=",">
			(
				#{item.id},
				#{item.title},
				#{item.content},
				#{item.createDate},
				#{item.updateDate},
				#{item.userId},
				#{item.status}
			)
		</foreach>
	</insert>   		
	
    <sql id="whereClause">
		<if test="title != null">			
			title = #{title}			
		</if>
		<if test="content != null">			
			and content = #{content}			
		</if>
		<if test="createDate != null">			
			and create_date = #{createDate}			
		</if>
		<if test="updateDate != null">			
			and update_date = #{updateDate}			
		</if>
		<if test="userId != null">			
			and user_id = #{userId}			
		</if>
		<if test="status != null">			
			and status = #{status}			
		</if>
	</sql>
    
	<select id="selectOne" resultType="com.kensure.ktl.liuliang.model.LLNotice" parameterType="Long" >
		select <include refid="allFields"/> 
		  from ll_notice 
		 where id = #{id} 
	</select>
	
	<select id="selectByIds" parameterType="List" resultType="com.kensure.ktl.liuliang.model.LLNotice">
		select <include refid="allFields"/> from ll_notice 
		where id in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</select>
		
	<select id="selectAll" resultType="com.kensure.ktl.liuliang.model.LLNotice">
		select <include refid="allFields"/> 
		from ll_notice 
	</select>

	<select id="selectCount" resultType="long">
		select count(*) from ll_notice 
	</select>
	
	<select id="selectCountByWhere" parameterType="Map" resultType="Long">
		select count(*) from ll_notice 
		<where>
		    <include refid="whereClause"/>
		</where>
	</select>

	<select id="selectByWhere" parameterType="Map" resultType="com.kensure.ktl.liuliang.model.LLNotice">
		select <include refid="allFields"/>
		from ll_notice 
		<where>
		    <include refid="whereClause"/>
		</where>				
		<if test="orderby != null">
			ORDER BY ${orderby}
		</if>
		<if test="limit != null">
			LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>
	
	<sql id="setComn">		
		<if test="title != null">
			title = #{title},
		</if>
		<if test="content != null">
			content = #{content},
		</if>
		<if test="createDate != null">
			create_date = #{createDate},
		</if>
		<if test="updateDate != null">
			update_date = #{updateDate},
		</if>
		<if test="userId != null">
			user_id = #{userId},
		</if>
		<if test="status != null">
			status = #{status}
		</if>
	</sql>
	
	<update id="update" parameterType="com.kensure.ktl.liuliang.model.LLNotice">
		 update ll_notice 
		    <set>
		    	<include refid="setComn"/>
			</set>
		  where id = #{id}
	</update>
	
	<update id="updateByMap" parameterType="Map">
		 update ll_notice 
		    <set>
		    	<include refid="setComn"/>
			</set>
		  where id = #{id}
	</update>
	
	<delete id="delete">
		delete from ll_notice where id = #{id}
	</delete>
	
	<delete id="deleteMulti" parameterType="List">
		delete from ll_notice
		where id in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete>
	
	<delete id="deleteByWhere" parameterType="Map">
		delete from ll_notice 
		<where>
		    <include refid="whereClause"/>
		</where>
	</delete>	

</mapper>    
